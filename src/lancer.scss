
/* TODO: Maybe multiple stylesheets is a good idea? Check out ITCSS and segment them by their layer */
/* TODO: Webcomponents. Tags, cards, compact stat */

/* Settings Layer*/
:root {
  --main-font-family: Helvetica, Arial, sans-serif;

  /* --main-theme-color: #991e2a;  /* I've configured calls to this to fall back on fuchsia when things go wrong */

  --main-theme-color: #125044;
  /* --secondary-theme-color: #505050;   */
  --secondary-theme-color: #879190;
  --loadout-color: #777f86;  
  --ref-color: #ddc0b3;  
  --gms-theme-color: #991e2a;
  --ipsn-theme-color: #1662b8;
  --ssc-theme-color: #d1920a;
  --horus-theme-color: #00a256;
  --ha-theme-color: #6e4373;
  /* Shouldn't there be some sort of "--current-theme"??? */

  --reaction-clip-path: polygon( 0 0, 100% 0, 100% 1px, calc(100% - 9px) 1px, calc(100% - 8px) 2px, 100% 2px, 100% 3px, calc(100% - 7px) 3px, calc(100% - 6px) 4px, 100% 4px, 100% 5px, calc(100% - 5px) 5px, calc(100% - 4px) 6px, 100% 6px, 100% 7px, calc(100% - 3px) 7px, calc(100% - 2px) 8px, 100% 8px, 100% 100%, 0 100% );
  --trait-color: #0a7674;
  --action-list-color: #305377;
  --deployable-list-color: #313892;
  --bonus-color: #5d8673;
  --bonus-list-color: #71a373;
  --system-color: #6a9759;
  --error-color: #b4800e;
  --tech-clip-path: polygon( 0 0, calc(100% - 12px) 0, calc(100% - 12px) 7px, calc(100% - 7px) 7px, calc(100% - 7px) 3px, calc(100% - 3px) 3px, calc(100% - 3px) 0, 100% 0, 100% 3px, calc(100% - 3px) 3px, calc(100% - 3px) 7px, calc(100% - 7px) 7px, calc(100% - 7px) 12px, 100% 12px, 100% 100%, 0 100% );
  --tech-color: #7d2477;
  --talent-color: #3a81c3;
  --weapon-color: #111111;
  --reaction-color: #892eb1;
  --protocol-color: #c75a00;

  /* Darkens tone by a small increment. For some themes should probably lighten instead, somehow? */
  --darken-1: #00000016;

  $clip_in: 10px;
  --top-dogear-path: polygon( #{$clip_in} 0, 100% 0, 100% 100%, 0 100%, 0 #{$clip_in} );
  --bottom-dogear-path: polygon( 0 0, 100% 0, 100% calc(100% - #{$clip_in}), calc(100% - #{$clip_in}) 100%, 0 100% );
  --double-dogear-path: polygon( #{$clip_in} 0, 100% 0, 100% calc(100% - #{$clip_in}), calc(100% - #{$clip_in}) 100%, 0 100%, 0 #{$clip_in} );
}


/* This mixin, from here:
https://brandonbrule.github.io/scss-animation-keyframe-mixin/
 *
 * Allows swift creation of cross-browser animations using transforms
 */

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}


@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {@content; }
    @-moz-keyframes #{$name} {@content;}
    @-ms-keyframes #{$name} {@content;}
    @keyframes #{$name} {@content;} 
}


@mixin animation ($delay, $duration, $animation, $direction: forward, $fillmode: fowards) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: $fillmode;
    -webkit-animation-direction: $direction;

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: $fillmode;
    -moz-animation-direction: $direction;

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: $fillmode;
    animation-direction: $direction;
}


.app {
  /* Set UI icons to white when located in headers and over the dark colour scheme */
  color: white;
}

.window-app .window-content,
#chat-controls div.roll-type-select select,
#chat-form textarea,
button {
  background: #ededed;  /* Set default backgrounds to a futuristic gundam light grey */
  font-family: var(--main-font-family);
}
/* ---------- */

/* Elements Layer */
.lancer.sheet .window-content *:not(.fas, .mdi, .cci),
#chat-log .message *:not(.fas, .mdi, .cci) {  /* An exception for each icon font */
  font-family: var(--main-font-family);
}

.lancer.sheet select {
  width: min-content;
}

.lancer.sheet .mount-header select {
  color: white;
  outline: 0;
  border: none;
}

.lancer.sheet .mount-header select option {
  background-color: var(--main-theme-color, fuchsia);
  color: white;
}

/* .lancer.sheet clipped-card {

} */

.flex-center {
  align-items: center;
  /* justify-content: center; */
}


/* For if you just want a single item left */
.self-left {
  align-self: flex-start;
}

/* ---------- */

/* Components Layer */
.lancer.sheet .window-content {
  background: #ededed; /* Overwrite the parchment background */
}

.lancer.sheet header:not(.window-header) {
  align-items: center;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  background-color: var(--main-theme-color, fuchsia);
  margin: 10px;
  color: white;

  &.grid {
    display: grid;
    align-items: flex-start;
  }
}



.lancer.sheet header .details {
  display: flex;
  /* flex-direction: column; */
  font-size: 14px;
  padding: 10px;
  align-items: flex-start;
}

.pilot-callsign {
  font-size: 34px;
  font-weight: bold;
}
/* ---------- */

/* Chat Styles */

#chat-log .message {
  background: rgba(237, 237, 237);
  border-radius: 15px 5px;
  padding: 0;
}

/* To also fit within borders */
#chat-log .message .message-header {
  border-radius: 13px 0 0 0;
}

#chat-log .message-header {
  overflow: hidden;
  background-color: var(--main-theme-color, fuchsia);
  padding: 5px 10px;
}

#chat-log .message-header * {
  color: white;
}

#chat-log .message-content {
  /* padding: 5px 10px; */
  border-top: 2px solid black;
}

/* ---- Vertical separators of various sizes ------ */
@mixin vsep-mixin($height) {
  border: none;
  border-left: 1px solid #444444;
  border-right: 1px solid #444444;
  max-width: 3px;
  margin-left: 6px;
  margin-right: 6px;
  height: $height;
}

.vsep {
  @include vsep-mixin(20px)
}

.vsep--xs {
  @include vsep-mixin(15px)
}

.vsep--s {
  @include vsep-mixin(20px)
}

.vsep--sm {
  @include vsep-mixin(25px)
}
.vsep--m {
  @include vsep-mixin(30px)
}

.vsep--l {
  @include vsep-mixin(40px)
}

.vsep--xl {
  @include vsep-mixin(60px)
}

.add-button {
  width: 20px;
  height: 20px;
  background: #d7b6b9;
  text-align: center;
  border: solid var(--main-theme-color, fuchsia);
  border-width: 1px;
  border-radius: 4px;
  font-weight: bold;
  color: var(--main-theme-color, fuchsia);
}

.remove-button {
  width: 20px;
  height: 20px;
  background: #bebebe;
  border: solid #3e3e3e;
  border-width: 1px;
  border-radius: 4px;
  text-align: center;
  color: #8e8e8e;
  padding-top: 2px 
}

.tags-container > div {
  flex-grow: 0;
}

.lancer .tag {
  display: grid;
  grid-template: 1em 1fr / 50px 1fr 50px;
  align-items: center;
  border: solid var(--main-theme-color, fuchsia);
  border-color: var(--main-theme-color, fuchsia);
  border-width: 1px;
  border-radius: 5px;
  border-left-width: 7px;
  margin: 2px;
}

.tag-label {
  flex-grow: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}


.simple-button {
  color: white;
  background-color: var(--main-theme-color, fuchsia);
  max-width: max-content;
  min-width: max-content;
  align-items: center;
  border-radius: 5px;
  padding: 0px 5px;
  margin: 3px 5px;
  border: 2px;
  font-size: 12px;
}



.compact-tag {
  color: white;
  background-color: var(--main-theme-color, fuchsia);
  max-height: 20px;
  align-items: center;
  border-radius: 5px;
  padding: 0px 5px;
  margin: 3px 5px;
  font-size: 12px;
}

.compact-tag-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-end;
  flex: 1;
  margin: 3px;
}


.labeled-input {
  flex-grow: unset;
}

.labeled-input > span {
  text-align: center;
  color: white;
  background-color: var(--main-theme-color, fuchsia);
  max-height: 1.5em;
}

.lancer .lancer-invisible-input {
  background: transparent;
  border: none;
  color: inherit;
  text-align: center;
}

ul.items-list {
  padding: 0;
}

/* Facillitates expand/collapse behavior */
.collapse-item {
  &.collapsed {
    /* @include animation(0, 0.5s, animation-scale-out-down, ease); */
    display: none;
  }

  &.expanded {
    @include animation(0, 0.5s, animation-fade-in ease);
  }
}

.collapse-ctrl {
  cursor: pointer;
}

/* Animation to scale in and become visible. NOTE: broken. You cannot animate visibility like this, will need some JS to make that work*/
@include keyframes('animation-scale-in-down') {
    0% {
      @include transform( scaleY(0) translateY(-50%) );
    }
 
    100% {
      @include transform( scaleY(100%) translateY(0) );
    }
}

/* Animation to scale to nothing and become collapsed */
@include keyframes('animation-scale-out-down') {
    0% {
        @include transform( scaleY(100%) translateY(0) );
        visibility: visible;
    }
 
    100% {
        @include transform( scaleY(0) translateY(-50%) );
        visibility: collapse;
    }
}

@include keyframes('animation-fade-in') {
    0% {
      filter: opacity(0);
    }
 
    100% {
      filter: opacity(1);
    }
}

.small-icon {   
  flex-grow: 0;
  min-width: 1em;
  max-height: 1em;
}

.med-icon {
  flex-grow: 0;
  max-width: 2.5em;
  max-height: 2.5em;
}

.large-icon {
  flex-grow: 0;
  min-width: 5em;
  max-height: 5em;
}

@mixin icon-size($pixels) {
  font-size: $pixels;
  min-width: $pixels;
  max-width: $pixels;
  min-height: $pixels;
  /* max-height: $pixels; */
}

.i--xs {
  @include icon-size(15px);
}

.i--s {
  @include icon-size(20px);
}

.i--sm {
  @include icon-size(25px);
}

.i--m {
  @include icon-size(30px);
}

.i--l {
  @include icon-size(40px);
}

.i--xl {
  @include icon-size(60px);
}

.size-icon,
.tier-icon {
  @include icon-size(120px);
}

.profile-img {
  @include icon-size(100px);
}

.i--dark {
  color: #2e2e2e;
}

.i--faded {
  color: #696969;
}

.i--light {
  color: #ededed;
}

.damage--kinetic {
  color: #616161;
}

.damage--energy {
  color: #2195ca;
}

.damage--explosive {
  color: #fca017;
}

.damage--burn {
  color: #ce871e;
}

.damage--heat {
  color: #e74210;
}

.damage--variable {
  color: #D500F9;
}

.clipped {
  clip-path: var(--double-dogear-path);
  -webkit-clip-path: var(--double-dogear-path);
}

.clipped-top {
  clip-path: var(--top-dogear-path);
  -webkit-clip-path: var(--top-dogear-path);
}

.clipped-bot {
  clip-path: var(--bottom-dogear-path);
  -webkit-clip-path: var(--bottom-dogear-path);
}

.lcp-importer {
  display: grid;
  grid-template: 1fr / 1fr 1fr;
}

.lcp-up {
  margin: 10px;
  align-self: center;
}

.lcp-core-update,
.lcp-import,
.lcp-clear-all {
  margin: 10px;
  width: auto;
}

table.lcp-index {
  margin: 10px;
  width: auto;
}

th.lcp-index,
td.lcp-index {
  text-align: left;
  padding: 0em 1em;
  font-size: 16px;
  height: 2em;
}

tr.lcp-index-header {
  height: 2em;
  background-color: rgba(0, 0, 0, 0.1);
  /* border: 1px solid #7a7971; */
}

.lancer-tabs {
  clip-path: polygon( 0 0, 100% 0, calc(100% - 20px) 100%, 0 100% );
  -webkit-clip-path: polygon( 0 0, 100% 0, calc(100% - 20px) 100%, 0 100% );
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  background-color: var(--main-theme-color, fuchsia);
  color: white;
  padding: 3px 10px;
  min-height: max-content;
  align-items: center;
}

.lancer-tab {
  clip-path: polygon( 10px 0, 100% 0, calc(100% - 10px) 100%, 0 100% );
  -webkit-clip-path: polygon( 10px 0, 100% 0, calc(100% - 10px) 100%, 0 100% );
  padding: 10px; 
  margin-left: 10px;
  margin-right: 10px;
}

.lancer-tab.active {
  color: var(--main-theme-color, fuchsia);
  background-color: #f0f0f0;
}

.tier-control {
  min-width: 100%;
  background-color: #991e2a;
  color: white;
}

.tier-control option {
  background-color: #991e2a;
  color: white;
}


/* The dashed-line border aesthetic found around certain items.
 * Should be used on an inner div of a card
 */
.lancer-body {
  min-height: 15px;
  padding: 3px;
  flex: 1 0;

  text-align: left;
  justify-content: flex-start;
  display: flex;
  flex-direction: column;

  hyphens: auto;
  word-break: break-word;

  border-width: 2px;
  border-style: solid;
  border-top-style: none;
  border-color: var(--main-theme-color, fuchsia);

  background-color: var(--darken-1);

  .talent > & {
    border-color: #3a81c3;
    background-color: #3a81c333;
    clip-path: polygon( 0 0, 100% 0, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0 100% );
    -webkit-clip-path: polygon( 0 0, 100% 0, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0 100% );
  }

  .weapon > & {
    border-color: #000000;
    border-style: dashed;
  }

  .tech > & {
    border-color: var(--tech-color);
    border-style: dashed;
  }

  .mount > & {
    min-height: 45px;
  }
}

.compact-range,
.compact-acc,
.compact-damage {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: nowrap;
  white-space: nowrap;
  margin: 5px;
  max-width: min-content;
  min-width: fit-content;
}

/* Put on any ref or reffable location */
/*.ref {

}*/

/* Put specifically on the rectangular card style of ref */
.list-card {
  border: 2px solid black;
  margin: 3px;
  display: flex; 
  align-items: center;
  cursor: pointer;
  text-align: center;
  max-height: 40px;
  font-weight: bold;

  span {
    margin-left: 5px;
  }
}

/* Valid, as a prefix, indicates that a ref is satisfied. It has ${ref_params()} 
* We make satisfied cards a different color to indicate this
*/
.valid.ref.list-card {
  background-color: var(--ref-color);
  color: black;
}

.ref-icon {
  width: 35px;
  height: 35px;
  margin: 0px;
  flex-grow: 0;
}

.list-card .ref-icon {
  border-width: 0;
  border-right-width: 2px;
}

/* Control box in the right side of a ref card. Delete button, etc */
.ref-list-controls {
  margin: 5px;
  margin-left: auto;
  max-width: 40px;
  display: flex;
  align-items: center;
}

/* Empty box at end of item lists where you can drop things. By default we don't want it to be visible */
.ref-list-append {
  visibility: hidden;
}

/* But if they are a valid drop target, we do! */
.ref-list-append.highlight-can-drop {
  visibility: visible;
}

/* Re-allow clicking in these damn things */
.lancer input,.input,textarea {
  -webkit-user-select: auto;
  -moz-user-select: auto;
  -ms-user-select: auto;
  user-select: auto;

  /* Also make them not insist on being so obnoxiously large */
  min-width: 30px;
}

/* Some text area sizes */
.lancer textarea {
  min-height: 200px;
}


.pilot-stats {
  clip-path: polygon( 0 0, calc(100% - 30px) 0, 100% 100%, 0 100% );
  -webkit-clip-path: polygon( 0 0, calc(100% - 30px) 0, 100% 100%, 0 100% );
  background-color: #CCCCCC;
  padding-left: 5px;
  padding-right: 5px;
  align-items: flex-start;
  color: black;
}

.compact-stat {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0 5px;
}

/** Fixes CSS priority on flexrows within cards */
.card.flexrow {
  flex-direction: row;
}

/* Consolidate all of our card header stuff stuff */
.lancer-header {
  flex: 0 0 2.0em;

  /* Generally uglier, inconsistent. Use when header needs other stuff in it, like with talents large icons etc */
  &.stretch {
    flex: 0 0 100%;
  }

  text-overflow: ellipsis;
  /* overflow: hidden; */ /* Disabled this to get context menus working */
  font-weight: normal;

  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  align-self: stretch;

  color: white;
  background-color: var(--main-theme-color, fuchsia);

  /* For buttons/icons, we want them to not grow but also not just get squashed into nothing 
  * If this unbalances things, add an equal # of balancers to the other side
  */ 
  a, i, img {
    flex: 0 0 auto;
    padding-left: 5px;
    padding-right: 5px;
  }

  div.balancer {
    flex: 0 0 auto;
    padding-left: 5px;
    padding-right: 5px;
  }

  /* Spans are the main bodies of headers. We want them to grow! 
  * Inputs too for those cases where the title is editable.
  */
  span, input {
    flex-grow: 1;
    text-align: center;
    /*font-size: inherit; */
  }

  /* Sometimes want left align, using the "left" class */
  span.left, input.left {
    text-align: left;
    margin-left: 10px;
  }

  /* Like main just an off color */
  &.alt {
    background-color: var(--secondary-theme-color, fuchsia);
  }

  /* If our parent item is clipped, we should be as well (? might not be necessary) */
  .clipped > &,
  .clipped-top > & {
    /* padding-left: 10px; */
    clip-path: var(--top-dogear-path);
    -webkit-clip-path: var(--top-dogear-path);
  }

  /* Category specific coloration */
  .npc-trait > &,
  .frame_trait > & {
    background-color: var(--trait-color, fuchsia);
  }

  .action-list > & {
    background-color: var(--action-list-color, fuchsia);
  }

  .deployable-list > & {
    background-color: var(--deployable-list-color, fuchsia);
  }

  .bonus-list > & {
    background-color: var(--bonus-list-color, fuchsia);
  }

  .bonus > & {
    background-color: var(--bonus-color, fuchsia);
  }


  .wep-mount > &,
  .sys-mount > &,
  .mount > & {
    background-color: var(--main-theme-color, fuchsia);
  }  

  .trigger > & {
    color: var(--main-theme-color, fuchsia);
    background-color: white;
  }

  .protocol > & {
    background-color: var(--protocol-color);
  }

  .npc-reaction > & {
    background-color: var(--reaction-color);
  }

  .tech > &,
  .npc-tech > & {
    /* clip-path: var(--tech-clip-path);
    -webkit-clip-path: var(--tech-clip-path); */
    background-color: var(--tech-color);
  }

  .mech_system > &,
  .npc-system > & {
    background-color: var(--system-color);
  }

  .mech_weapon > &,
  .npc-weapon > &,
  .pilot_weapon > & {
    background-color: var(--weapon-color);
  }

  .pilot_gear > & {
    background-color: var(--system-color);
  }

  .pilot_armor > & {
    background-color: var(--main-theme-color);
  }

  /* Less a card header, more just another thing */
  &.loadout-category {
    background-color: var(--loadout-color, fuchsia);
  }

  &.error {
    background-color: var(--error-color);
  }
}

/* General font sizing options */

/* Some flex helpers */
@mixin fontie($size, $weight) {
  font-size: $size;
  font-weight: $weight;

  /* Need this to override some other inbuilt foundry css rules. Don't want to !important it */
  input {
    font-size: $size;
  /*
    font-weight: $weight;
  */
  }
}

/* Big */
.major {
  @include fontie(18px, bolder);
}

/* Slightly less big */
.submajor {
  @include fontie(15px, bold);
}

/* Omit - normal */

/* Small */
.minor {
  @include fontie(12px, light);
}

.lancer-stat {
  margin: 0em 0.2em;
}

.effect-stat,
input[type=number].lancer-stat {
  align-self: center;
  text-align: center;
  max-width: 50px;
  min-width: 30px;
}

.lancer-text-field,
input[type=string].lancer-input {
  align-self: center;
  text-align: left;
  width: calc(100% - 20px);
  margin: 5px;
}



.size-icon {
  color: var(--main-theme-color, fuchsia);
}
.tier-icon {
  color: white;
}

/* Makes our name big and wide */
.header-name {
  align-self: center;
  height: -webkit-fill-available;
}

/* Fixes color in our headers to be all white. Old - would need to be replaced if we did proper themes */
.header-field,
.header-fields > * {
  color: white !important;
}

/* This fixes tinyMCE editors being way too damn tiny */
.editor, .editor-content {
  height: -webkit-fill-available;
  min-height: 30em;
}

/* We use this generally to indicate subpartitions of our view space */
.card {
  background-color: rgba(0,0,0,0.07);
  margin: 3px 10px;
  text-align: center;
  padding-bottom: 1px;
  display: flex;
  flex-direction: column;

  &.nested {
    margin: 0px 0px;
  }
}

/* Used for longer descriptive text regions */
.desc-text {
  text-align: left;
  padding: 0.5em;
  font-family: Consolas;
  
  border: 1px solid #999;
  border-radius: 5px;
  margin: 5px;
  background: rgba(0, 0, 0, 0.2);
}

.compact-action-box {
  text-align: left;
  align-items: center;
  display: flex;
  flex-direction: row;
  border-width: 1px;
  border-radius: 8px;
  border-color: black;
  border-style: solid;
  margin-top: 10px;
}

/* Used to wrap larger onhit/oncrit/whatever effect boxes */
.effect-box {
  text-align: left;
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  border-width: 1px;
  border-radius: 8px;
  border-color: black;
  border-style: solid;
  margin-top: 10px;
}

/* Used to title effect boxes with a neat in-line effect */
.effect-title {
  text-transform: uppercase;
  letter-spacing: .13em !important;
  font-weight: 530;
  position: relative;
  top: -8px;
  left: 8px;
  background: var(--main-theme-color);
  color: white;
  border-radius: 5px;
  padding-left: 3px;
  padding-right: 3px;
}

.effect-text {
  padding: 0px 0px 0.5em 0.5em;
  font-family: Helvetica;
}

/* Start of HORUS glitchy styles used in lancer-data */
code {
  padding: 4px 12px 4px 12px;
}

code.horus {
  font-size: 1.1em;
  background-color: black !important;
  box-shadow: none;
  color: white;
  font-style: normal;
  letter-spacing: 0.05em;
  border-radius: 0;
}

code.horus:hover {
  background-color: black !important;
  animation: distort 0.6s infinite;
  text-transform: uppercase;
  font-weight: bold;
}

@keyframes distort {
  0% {
    text-shadow: 2px 1px #ff00ff, -2px -3px #00ffff;
    transform: translate(-1px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: crosshair;
  }
  25% {
    text-shadow: -2px -3px #ff00ff, 2px 1px #00ffff;
    transform: translate(2px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: cell;
  }
  50% {
    text-shadow: 2px -1px #ff00ff, -4px 1px #00ffff;
    transform: translate(-2px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: col-resize;
  }
  75% {
    text-shadow: -4px -1px #ff00ff, -2px -1px #00ffff;
    transform: translate(3px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: move;
  }
  100% {
    text-shadow: -2px 0 #ff00ff, 2px -1px #00ffff;
    transform: translate(-2px, 0) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: all-scroll;
  }
}

.horus--subtle {
  animation: distort-subtle 5s infinite;
}

@keyframes distort-subtle {
  25% {
    text-shadow: none;
  }
  26% {
    text-shadow: 2px -1px #ff0000, -2px 3px #00ffff;
  }
  27% {
    text-shadow: -2px -3px #ff0000, 2px 1px #00ffff;
  }
  28% {
    text-shadow: 2px 1px #ff0000, -4px 1px #00ffff;
  }
  29% {
    text-shadow: -4px 1px #ff0000, -2px -1px #00ffff;
  }
  30% {
    text-shadow: none;
  }
  75% {
    text-shadow: none;
  }
  76% {
    text-shadow: -4px 1px #ff0000, -2px -1px #00ffff;
  }
  77% {
    text-shadow: -2px -3px #ff0000, 2px 1px #00ffff;
  }
  78% {
    text-shadow: 2px -1px #ff0000, -2px 3px #00ffff;
  }
  79% {
    text-shadow: 2px 1px #ff0000, -4px 1px #00ffff;
  }
  80% {
    text-shadow: none;
  }
}


/* End of HORUS glitchy styles used in lancer-data */

.lancer-macro {
  margin: 3px 10px;
}


.system-macro {
  max-width: min-content;
}

.lancer-dice-roll {
  padding: 3px;
}

.lancer-dice-formula,
.lancer-dice-total {
  margin: 5px;
  align-items: center;
  text-align: center;
  background: rgba(0, 0, 0, 0.1);
  border: 1px solid #999;
  border-radius: 3px;
  box-shadow: 0 0 2px #FFF inset;

  &.crit {
    /* Red glow */
    box-shadow: 4px 0 2px #FFF inset;
    box-shadow: 0px 0px 4px 4px var(--main-theme-color);

    &.nat-20 {
      animation: crit_glow 800ms ease-out 1 normal;
    }
  }
}

/* Flash glow on doubleclick success */
.double-click-success {
  animation: double_click_glow 800ms ease-in-out none
}

/* The entire mech loadout box */
.mech-loadout {
  border: solid 10px black;
  border-radius: 10px;
}

.lancer-dice-total {
  margin: 5px;
  min-width: max-content;
  padding: 0px 5px;
}

button.overkill-reroll {
  margin: 5px;
  padding: 1px 10px;
  max-width: fit-content;
  background: #e46742;
  border: 1px solid #e74210;
  font-weight: bold;
}

.arrow-input-container {
  align-self: center;
  max-width: fit-content;
  flex-wrap: nowrap;
}

.mod-plus-button {
  clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 20% 50%, 0% 0%);
}

.mod-minus-button {
  clip-path: polygon(100% 0%, 80% 50%, 100% 100%, 25% 100%, 0% 50%, 25% 0%);
}

.mod-minus-button, .mod-plus-button {
  width: 2em;
  max-width: 2em;
  background-color: #828282;
  color: #bebebe;
  border:none;
  /* Don't ask me why, but this aligns it vertically nicely */
  line-height: 1px;
}

input[type=number] {
  -moz-appearance: textfield;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input.core-power-toggle {
  display: block;
  width: 30px;
  height: 30px;
  -webkit-appearance: none;
  outline: 0;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  font: normal normal normal 24px/1 "Material Design Icons";
  -webkit-filter: none !important;
  filter: none !important;
}

input.core-power-toggle:checked::before
{
  content: "\F0079";
  color: green;
}
input.core-power-toggle:not(:checked)::before
{
  content: "\F007A";
  color: grey;
}

.overcharge-heat {
  color:#fc3e0f; 
  flex-grow: unset;
  width: 1.5em;
}

.overcharge-button {
  display: flex;
  justify-content: center;
  align-items: center;
  line-height: .8em;
  font-weight: bold;
  font-size: 16pt;
  border: none;
  border-radius: 2em;

  &.level-0 {
    background-color: white;
  }

  &.level-1 {
    background-color: rgb(197, 238, 84);
  }

  &.level-2 {
    background-color: rgb(219, 164, 13);
  }

  &.level-3 {
    background-color: rgb(219, 89, 13);
  }
}

/* Some flex helpers */
@mixin wr-item($prefix, $percent, $margin) {
  &.#{$prefix} > * {
    flex: 1 0 calc(#{$percent} - #{$margin * 2}); 
    margin: 3px;
  }

  &.#{$prefix} > .double {
    flex: 1 0 calc(#{$percent * 2} - #{$margin * 2}); 
  }

  &.#{$prefix} > .triple {
    flex: 1 0 calc(#{$percent * 3} - #{$margin * 2}); 
  }

  &.#{$prefix} > .quadruple {
    flex: 1 0 calc(#{$percent * 4} - #{$margin * 2}); 
  }

  &.#{$prefix} > .quintuple {
    flex: 1 0 calc(#{$percent * 5} - #{$margin * 2}); 
  }

  &.#{$prefix} > .hextuple {
    flex: 1 0 calc(#{$percent * 6} - #{$margin * 2}); 
  }
}

/* Wraprow is a flexrow that specifically aims to have N equally sized items per row.
 * N is determined by a numeric specifier double/triple/... in the wraprow container
 * Individual items can request to fill up multiple spaces.
 * Generally simpler to use than a grid
 */
.wraprow {
  display: flex;
  flex-wrap: wrap;

  @include wr-item("double", 50%, 3px);
  @include wr-item("triple", 33.33%, 3px);
  @include wr-item("quadruple", 25%, 3px);
  @include wr-item("quintuple", 20%, 3px);
  @include wr-item("hextuple", 16.66%, 3px);
    
  /* 3/3. However, we generalize */
  &.double > .full,
  &.triple > .full,
  &.quadruple > .full,
  &.quintuple > .full,
  &.hextuple > .full { 
    flex: 1 0 calc(100% - 6px); 
    margin: 3px;
  }
}

/* This site is nice https://grid.layoutit.com/ */


/* Throw this in when you want to grow */
.grow {
  flex-grow: 1 !important; 
}

/* And this one when ya don't wanna grow*/
.no-grow {
  flex-grow: 0 !important;
}

/* Throw this in when you want to wrap */
.wrap {
  flex-wrap: wrap !important;
}

/* And this one when ya don't wanna wrap*/
.no-wrap {
  flex-wrap: nowrap !important;
}

.highlight-can-drop {
	animation: drop_glow 800ms ease-out infinite alternate;
	background: #222922;
	background: linear-gradient(#333933, #222922);
	color: #efe;
	outline: none;
}

/* Allows rapid definition of new glows */
/* Glow effect courtesy of https://codepen.io/jackrugile/pen/ABeIi */
@mixin define_glow_anim($name, $glow_color, $border1, $border2, $size) {
  @include keyframes($name) {
      0% {
        border-color: $border1;
        box-shadow: 0 0 ($size / 4) rgba($glow_color, .2), inset 0 0 5px rgba($glow_color, .1), 0 2px 0 ;
      }	
      100% {
        border-color: $border2;
        box-shadow: 0 0 $size rgba($glow_color, .6), inset 0 0 10px rgba($glow_color, .4), 0 2px 0;
      }
  }
}

/* Make our glows */
@include define_glow_anim(drop_glow, #0F0, #393, #6f6, 20px);
@include define_glow_anim(crit_glow, #FA4, rgb(54, 43, 33), rgb(175, 95, 84), 20px);
@include define_glow_anim(double_click_glow, rgb(0, 247, 255), rgb(37, 85, 117), rgb(87, 136, 158), 100px);

@include keyframes(double_click_glow) {
  0% {
    filter: invert(1);
  }

  100% {
    filter: invert(0);
  }
}

/* Used for HORUS text */
@include keyframes(distort) {
  0% {
    text-shadow: 2px 1px #ff00ff, -2px -3px #00ffff;
    transform: translate(-1px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: crosshair;
  }
  25% {
    text-shadow: -2px -3px #ff00ff, 2px 1px #00ffff;
    transform: translate(2px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: cell;
  }
  50% {
    text-shadow: 2px -1px #ff00ff, -4px 1px #00ffff;
    transform: translate(-2px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: col-resize;
  }
  75% {
    text-shadow: -4px -1px #ff00ff, -2px -1px #00ffff;
    transform: translate(3px, 1px) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: move;
  }
  100% {
    text-shadow: -2px 0 #ff00ff, 2px -1px #00ffff;
    transform: translate(-2px, 0) translate3D(-30px, 0px, 0) rotate(-0.1deg);
    cursor: all-scroll;
  }
}

/* We remove this when you're a GM, but it otherwise serves as a convenient "don't look here" */
.deployable-button .hidden {
  display: none;
}